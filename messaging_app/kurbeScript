#!/usr/bin/env bash
# kurbeScript — start a local Kubernetes cluster with minikube, verify, and list pods
# Works on macOS (arm64/amd64) and Linux. Uses existing minikube profile if present.

set -euo pipefail

log() { printf "\033[1;34m[INFO]\033[0m %s\n" "$*"; }
warn() { printf "\033[1;33m[WARN]\033[0m %s\n" "$*"; }
err() { printf "\033[1;31m[ERR ]\033[0m %s\n" "$*" >&2; }

command_exists() { command -v "$1" >/dev/null 2>&1; }

OS="$(uname -s | tr '[:upper:]' '[:lower:]')"
ARCH="$(uname -m)"

install_kubectl() {
  if command_exists kubectl; then return; fi
  log "Installing kubectl ..."
  if [[ "$OS" == "darwin" ]]; then
    if command_exists brew; then
      brew install kubectl
    else
      warn "Homebrew not found; installing kubectl via curl."
      curl -fsSL -o /usr/local/bin/kubectl "https://dl.k8s.io/release/$(curl -fsSL https://dl.k8s.io/release/stable.txt)/bin/darwin/amd64/kubectl"
      chmod +x /usr/local/bin/kubectl
    fi
  else
    # Linux
    sudo true >/dev/null 2>&1 || { err "This step needs sudo for /usr/local/bin"; exit 1; }
    curl -fsSL -o kubectl "https://dl.k8s.io/release/$(curl -fsSL https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
    chmod +x kubectl
    sudo mv kubectl /usr/local/bin/kubectl
  fi
}

install_minikube() {
  if command_exists minikube; then return; fi
  log "Installing minikube ..."
  if [[ "$OS" == "darwin" ]]; then
    if command_exists brew; then
      brew install minikube
    else
      curl -fsSL -o minikube "https://storage.googleapis.com/minikube/releases/latest/minikube-darwin-$( [[ $ARCH == arm64 ]] && echo arm64 || echo amd64 )"
      chmod +x minikube
      sudo mv minikube /usr/local/bin/minikube
    fi
  else
    # Linux
    sudo true >/dev/null 2>&1 || { err "This step needs sudo for /usr/local/bin"; exit 1; }
    curl -fsSL -o minikube "https://storage.googleapis.com/minikube/releases/latest/minikube-linux-amd64"
    chmod +x minikube
    sudo mv minikube /usr/local/bin/minikube
    # helpful dependency on some distros
    if command_exists apt-get; then
      sudo apt-get update -y
      sudo apt-get install -y conntrack || true
    fi
  fi
}

start_minikube() {
  log "Checking for existing minikube profile ..."
  if minikube profile list >/dev/null 2>&1; then
    if minikube profile list | grep -qE '^\s*minikube\s'; then
      log "Existing profile found. Starting with existing driver ..."
      minikube start
      return
    fi
  fi

  # No existing profile: pick a sensible driver
  if [[ "$OS" == "darwin" ]]; then
    # On macOS, prefer docker driver (works on Apple Silicon)
    log "No existing profile. Starting minikube with docker driver ..."
    minikube start --driver=docker
  else
    # Linux: docker is typically available; fallback to auto if not
    if command_exists docker; then
      log "No existing profile. Starting minikube with docker driver ..."
      minikube start --driver=docker
    else
      warn "Docker not found; letting minikube auto-select a driver."
      minikube start
    fi
  fi
}

verify_cluster() {
  log "Verifying cluster with kubectl cluster-info ..."
  kubectl cluster-info
  log "Listing pods across all namespaces ..."
  kubectl get pods -A || true
}

main() {
  install_minikube
  install_kubectl
  start_minikube
  verify_cluster
  log "All done ✅"
}

main "$@"
